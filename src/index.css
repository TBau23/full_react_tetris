body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

/* root is equivalent to selecting the html element effectively */
:root {
  --bg-color: rgba(150, 150, 150, 1);

  --border-left-color: rgba(255, 255, 255, 0.20);
  --border-top-color: rgba(255, 255, 255, 0.33);
  --border-right-color: rgba(0, 0, 0, 0.15);
  --border-bottom-color: rgba(0, 0, 0, 0.5);

  --color-0: #eaeaea;
  --color-1: #ff6600;
  --color-2: #eec900;
  --color-3: #0000ff;
  --color-4: #cc00ff;
  --color-5: #00ff00;
  --color-6: #66ccff;
  --color-7: #ff0000;

  --button-color-t: rgba(200, 200, 200, 1);
  --button-color-r: rgba(150, 150, 150, 1);
  --button-color-b: rgba(120, 120, 120, 1);
  --button-color-l: rgba(222, 222, 222, 1);

  /* Numbers define values that will be used throughout the CSS */
  --cols: 10;
  --rows: 18;
  --tile-size: 20px;
  --border-width: 5px;
}

/* Colors */
/* allows us to make global color changes from one location */
.color-0 {
  background-color: var(--color-0);
}
.color-1 {
  background-color: var(--color-1);
}
.color-2 {
  background-color: var(--color-2);
}
.color-3 {
  background-color: var(--color-3);
}
.color-4 {
  background-color: var(--color-4);
}
.color-5 {
  background-color: var(--color-5);
}
.color-6 {
  background-color: var(--color-6);
}

.color-7 {
  background-color: var(--color-7);
}

.grid-square {
  border-style: solid;
  width: var(--tile-size);
  height: var(--tile-size);
  border-width: var(--border-width);
  border-left-color: var(--border-left-color);
  border-top-color: var(--border-top-color);
  border-right-color: var(--border-right-color);
  border-bottom-color: var(--border-bottom-color);
}

* {
  box-sizing: border-box;
}

.grid-board {
  display: grid;
  grid-template-columns: repeat(var(--cols), var(--tile-size)); /*num of cols in grid is set with --cols and the width of each is set by tile size */
  grid-gap: 0;
  align-self: flex-start;
  grid-area: c;
}

.next-block {
  display: grid;
  grid-template-columns: repeat(4, var(--tile-size));
  grid-area: l;
  align-self: flex-start;
}

.score-board-button {
  display: block;
  padding: 1em;
  border-width: 5px;
  border-top-color: var(--button-color-t);
  border-left-color: var(--button-color-l);
  border-right-color: var(--button-color-r);
  border-bottom-color: var(--button-color-b);

}

.score-board {
  grid-area: r;
}

.App-header {
  background: linear-gradient(90deg, rgba(215,255,254,1) 0%, rgba(39,253,245,1) 17%, rgba(247,101,184,1) 100%); ;
  min-height: 10vh;
  grid-area: h;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
  
}

.App {
  text-align: center;

  --col-side: calc(var(--tile-size) * 4);
  --col-center: calc(var(--tile-size) * 10);
  --grid-height: calc(var(--tile-size) * 18);

  width: calc(var(--tile-size) * (4 + 1 + 10 + 1 + 4));
  margin: auto;
  display: grid;

  gap: var(--tile-size) var(--tile-size);
  /* Defining three columns with the sizes defined using variables above */
  grid-template-columns: var(--col-side) var(--col-center) var(--col --col-side);
  /* Defining rows */
  grid-template-rows: 100px var(--grid-height) 100px;

  /* can define all of the areas represented by this grid with their own variable */
  grid-template-areas: "h h h"
                       "l c r"
                       "b b b";
}

.controls {
  grid-area: b;
  display: flex;
  flex-direction: row;
  margin: auto;
}

.control-button {
  --size: calc(var(--tile-size) * 3);
  width: var(--size);
  height: var(--size);
  text-align: center;
  display: block;
  margin: 2px;
  border-width: 5px;
  border-top-color: var(--button-color-t);
  border-left-color: var(--button-color-l);
  border-right-color: var(--button-color-r);
  border-bottom-color: var(--button-color-b);
  
}

.message-popup {
  position: absolute; /*  lets us put msg anywhere on page - position handled by left, top, and transform*/
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  width: calc(var(--tile-size) * 10);
  height: calc(var(--tile-size) * 10);
  background-color: rgba(255, 255, 255, 0.5);
  text-align: center;
}

.message-popup.hidden {
  display: none;
}